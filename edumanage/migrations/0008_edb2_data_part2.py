# -*- coding: utf-8 -*-
# Generated by Django 1.11.23 on 2019-12-08 07:14
from __future__ import unicode_literals

from django.db import migrations
from django.db.models import OuterRef, Subquery, F
from django.utils.functional import curry

from . import AppAwareRunPython

def migrate_serviceloc_coords(apps, schema_editor, app_name, forwards=True):
    db_alias = schema_editor.connection.alias
    sl_model = apps.get_model(app_name, 'ServiceLoc')
    coords_model = apps.get_model(app_name, 'Coordinates')
    if forwards:
        for sl_obj in sl_model.objects.using(db_alias).all():
            c_obj, _ = coords_model.objects.using(db_alias).update_or_create(
                serviceloc=sl_obj,
                defaults={
                    'latitude':  sl_obj.latitude,
                    'longitude': sl_obj.longitude,
                }
            )
            sl_obj.coordinates.set([c_obj])
    else:
        coords_sq = coords_model.objects.using(db_alias).filter(
            serviceloc__pk=OuterRef('pk')
        )
        sl_model.objects.using(db_alias).annotate(
            sq_latitude=Subquery(coords_sq.values('latitude')[:1]),
            sq_longitude=Subquery(coords_sq.values('longitude')[:1])
        ).update(
            latitude=F('sq_latitude'),
            longitude=F('sq_longitude')
        )


class Migration(migrations.Migration):

    dependencies = [
        ('edumanage', '0007_edb2_data_part1'),
    ]

    operations = [
        AppAwareRunPython(
            curry(migrate_serviceloc_coords, forwards=True),
            reverse_code=curry(migrate_serviceloc_coords, forwards=False),
            hints={'model_name': 'serviceloc'},
        ),
    ]
